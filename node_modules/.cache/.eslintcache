[{"D:\\React projects\\project 1\\flexfit-frontend\\src\\index.js":"1","D:\\React projects\\project 1\\flexfit-frontend\\src\\App.js":"2","D:\\React projects\\project 1\\flexfit-frontend\\src\\pages\\homePage.js":"3","D:\\React projects\\project 1\\flexfit-frontend\\src\\components\\navbar.js":"4","D:\\React projects\\project 1\\flexfit-frontend\\src\\components\\heroSection.js":"5"},{"size":155,"mtime":1698424430786,"results":"6","hashOfConfig":"7"},{"size":150,"mtime":1698426886621,"results":"8","hashOfConfig":"7"},{"size":307,"mtime":1698435213718,"results":"9","hashOfConfig":"7"},{"size":852,"mtime":1698433266161,"results":"10","hashOfConfig":"7"},{"size":1566,"mtime":1698440786822,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"lej5m3",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"D:\\React projects\\project 1\\flexfit-frontend\\src\\index.js",[],[],["30"],"D:\\React projects\\project 1\\flexfit-frontend\\src\\App.js",[],[],"D:\\React projects\\project 1\\flexfit-frontend\\src\\pages\\homePage.js",[],[],"D:\\React projects\\project 1\\flexfit-frontend\\src\\components\\navbar.js",["31","32","33","34","35","36"],[],"import React, { useState } from 'react'\r\nimport './navbar.css'\r\n\r\nconst Navbar = () => {\r\n    const [color , setColor] = useState('white')\r\n  return (\r\n    <div class=\"nav__main-div\">\r\n        <div class=\"nav__name-div\">\r\n            <p class=\"nav__name-p1\">Flex<span style={{color:'white'}}>Fit</span></p>\r\n        </div>\r\n        <div class=\"nav__navigation\" style={{color:color}}>\r\n            <ul>\r\n                <li><a>Home</a></li>\r\n                <li><a>About us</a></li>\r\n                <li><a>Classes</a></li>\r\n                <li><a>Online shop</a></li>\r\n                <li><a>Blogs and Articles</a></li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"nav__form-btn\" style={{color:color}}>\r\n            <button>Sign In</button>\r\n            <button>Sign Up</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\React projects\\project 1\\flexfit-frontend\\src\\components\\heroSection.js",["37","38"],[],"import React from 'react'\r\nimport './heroSection.css'\r\nimport Lottie from 'react-lottie'\r\nimport hero1 from '../assets/images/hero1.jpg'\r\nimport hero2 from '../assets/images/hero2.jpg'\r\nimport animation from '../assets/lotties/animation.json'\r\n\r\nconst HeroSection = () => {\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: animation,\r\n        rendererSettings: {\r\n          preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n      };\r\n  return (\r\n    <div class=\"hero__main-div\">\r\n        <div class=\"hero__first-div\">\r\n            <p class=\"p1\">Wellcome to FlexFit</p>\r\n            <p class=\"p2\">The Most Complete Gym To Work Out</p>\r\n            <p class=\"p3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Utenimad minim veniam.</p>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class='hero__image-div'>\r\n            <img class=\"img1\" src={hero1} />\r\n            <div class=\"hero__image-subDiv\">\r\n                <div>\r\n                    <img class=\"img2\" src={hero2} />\r\n                </div>\r\n                <div class=\"hero__member-card\">\r\n                    <div><Lottie options={defaultOptions} height={100} width={100}/></div>\r\n                    <div>\r\n                        <p class=\"card-p1\">500 +</p>\r\n                        <p class=\"card-p2\">Members</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeroSection",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":20,"nodeType":"43","messageId":"44","endLine":5,"endColumn":28},{"ruleId":"45","severity":1,"message":"46","line":13,"column":21,"nodeType":"47","endLine":13,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":14,"column":21,"nodeType":"47","endLine":14,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":15,"column":21,"nodeType":"47","endLine":15,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":16,"column":21,"nodeType":"47","endLine":16,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":17,"column":21,"nodeType":"47","endLine":17,"endColumn":24},{"ruleId":"48","severity":1,"message":"49","line":28,"column":13,"nodeType":"47","endLine":28,"endColumn":45},{"ruleId":"48","severity":1,"message":"49","line":31,"column":21,"nodeType":"47","endLine":31,"endColumn":53},"no-new-object",["50"],"no-unused-vars","'setColor' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-object-constructor"]